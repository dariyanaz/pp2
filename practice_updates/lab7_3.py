import pygame
pygame.init()

screen = pygame.display.set_mode((800, 800))
pygame.display.set_caption("Ball Game")

# Определение цветов в формате RGB (Red, Green, Blue)
white = (255, 255, 255)  
red = (255, 0, 0)       

# Начальные координаты центра шарика (x, y)
x, y = 400, 400
# Радиус шарика в пикселях
radius = 40
# Расстояние, на которое перемещается шарик при нажатии клавиши
move = 20

# Флаг работы игрового цикла (True - игра работает, False - завершается)
run = True

# Главный игровой цикл
while run:
    # Заливка экрана белым цветом (очистка экрана)
    screen.fill(white)
    
    # Отрисовка красного круга (шарика) с текущими координатами и радиусом
    pygame.draw.circle(screen, red, (x, y), radius)
    
    # Обработка всех событий, происходящих в игре
    for event in pygame.event.get():
        # Если событие - закрытие окна (нажатие на крестик)
        if event.type == pygame.QUIT:
            run = False  # Остановка игрового цикла
            
        # Если событие - нажатие клавиши на клавиатуре
        elif event.type == pygame.KEYDOWN:
            # Обработка нажатия стрелки ВВЕРХ
            if event.key == pygame.K_UP and y - radius - move >= 0:
                y -= move  # Уменьшаем координату y (движение вверх)
                # Проверка, чтобы шарик не выходил за верхнюю границу экрана
                
            # Обработка нажатия стрелки ВНИЗ
            elif event.key == pygame.K_DOWN and y + radius + move <= 800:
                y += move  # Увеличиваем координату y (движение вниз)
                # Проверка, чтобы шарик не выходил за нижнюю границу экрана
                
            # Обработка нажатия стрелки ВЛЕВО
            elif event.key == pygame.K_LEFT and x - radius - move >= 0:
                x -= move  # Уменьшаем координату x (движение влево)
                # Проверка, чтобы шарик не выходил за левую границу экрана
                
            # Обработка нажатия стрелки ВПРАВО
            elif event.key == pygame.K_RIGHT and x + radius + move <= 800:
                x += move  # Увеличиваем координату x (движение вправо)
                # Проверка, чтобы шарик не выходил за правую границу экрана
    
    # Обновление содержимого экрана (без этого изменения не будут видны)
    pygame.display.flip()

# Завершение работы Pygame после выхода из игрового цикла
pygame.quit()